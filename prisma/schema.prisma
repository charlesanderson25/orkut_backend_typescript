generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id         Int      @id @default(autoincrement())
  message    String   @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)
  post_id    Int
  user_id    Int?
  posts      posts    @relation(fields: [post_id], references: [id], onUpdate: Restrict, map: "FK_comments_post")

  @@index([post_id], map: "FK_comments_post")
}

model friends {
  id                          Int   @id @default(autoincrement())
  user_a                      Int
  user_b                      Int
  users_friends_user_aTousers users @relation("friends_user_aTousers", fields: [user_a], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_a")
  users_friends_user_bTousers users @relation("friends_user_bTousers", fields: [user_b], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_b")

  @@index([user_a], map: "fk_user_a")
  @@index([user_b], map: "fk_user_b")
}

model notepads {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  TITLE      String   @db.VarChar(255)
  SUBTITLE   String   @db.VarChar(255)
  CONTENT    String   @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model posts {
  id         Int        @id @default(autoincrement())
  CONTENT    String     @db.Text
  created_at DateTime   @default(now()) @db.Timestamp(0)
  user_id    Int?
  comments   comments[]
}

model users {
  id                            Int       @id @default(autoincrement())
  first_name                    String    @db.VarChar(255)
  last_name                     String    @db.VarChar(255)
  avatar                        String    @db.VarChar(2048)
  pass_word                     String    @db.VarChar(255)
  created_at                    DateTime  @default(now()) @db.Timestamp(0)
  friends_friends_user_aTousers friends[] @relation("friends_user_aTousers")
  friends_friends_user_bTousers friends[] @relation("friends_user_bTousers")
}
